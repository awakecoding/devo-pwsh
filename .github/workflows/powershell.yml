name: PowerShell
on: workflow_dispatch
jobs:
  build:
    name: PowerShell [${{matrix.arch}}-${{matrix.os}}]
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
        os: [ windows, macos, linux ]
        version: [ 7.4.1 ]

        include:
          - version: 7.4.1
            git-ref: v7.4.1

          - os: windows
            runner: windows-2022
          - os: macos
            runner: macos-13
          - os: linux
            runner: ubuntu-22.04
  
    steps:
      - name: Clone project
        uses: actions/checkout@v4

      - name: Clone PowerShell ${{matrix.version}}
        uses: actions/checkout@v4
        with:
          repository: PowerShell/PowerShell
          ref: ${{matrix.git-ref}}
          path: PowerShell

      - name: Bootstrap PowerShell
        shell: pwsh
        run: |
          Import-Module "./PowerShell/build.psm1" -Force
          Start-PSBootstrap

      - name: Build PowerShell
        shell: pwsh
        run: |
          Import-Module "./PowerShell/build.psm1" -Force
          Start-PSBootstrap

      - name: Build PowerShell
        shell: pwsh
        run: |
          Import-Module "./PowerShell/build.psm1" -Force
          $DotNetOs = @{'windows'='win';'macos'='osx';'linux'='linux'}['${{matrix.os}}']
          $DotNetArch = '${{matrix.arch}}'
          if (($DotNetOs -eq 'win') -and ($DotNetArch -eq 'x64')){
            $DotNetOs = "win7"
          }
          $Runtime = "${DotNetOs}-${{matrix.arch}}"
          $OutputPath = Join-Path $PWD "PowerShell-${{matrix.version}}-${{matrix.os}}-${{matrix.arch}}"
          $ArchiveFile = "$OutputPath.tar.gz"
          $PSBuildParams = @{
            Configuration = "Release";
            Runtime = $Runtime;
            Output = $OutputPath;
            ForMinimalSize = $false;
            Detailed = $true;
            Clean = $true;
          }
          Start-PSBuild @PSBuildParams
          & 'tar' '-czf' "$ArchiveFile" '-C' "$OutputPath" "."

      - name: Upload PowerShell package
        uses: actions/upload-artifact@v4
        with:
          name: PowerShell-${{matrix.version}}-${{matrix.os}}-${{matrix.arch}}
          path: PowerShell-${{matrix.version}}-${{matrix.os}}-${{matrix.arch}}.tar.gz
